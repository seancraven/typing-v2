name: Build and Push Backend Docker Image

on:
  push: # Optional: Trigger on pull requests
    branches:
      - main

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend Docker image
        id: build-push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}/backend:latest
          context: backend
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend Docker image
        id: build-push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}/frontend:latest
          context: frontend
          cache-from: type=gha
          cache-to: type=gha,mode=max

  compose_up:
    needs: [build-and-push-backend, build-and-push-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Compose
        uses: docker/setup-compose-action@v1

      - name: SSH config
        run: |
          mkdir ~/.ssh -p
          echo -e "${{ secrets.ssh }}" > ~/.ssh/ssh
          echo -e "${{ secrets.ssh_pub }}" > ~/.ssh/ssh.pub
          chmod 400 ~/.ssh/ssh
          cp terraform/cfgssh ~/.ssh/config
          scp ~/.ssh/config type:/dev/null
      - name: Deploy images
        env:
          GOOGLE_API_KEY: ${{ secrets.google_api_key }}
        run: |
          docker context create type --docker "host=ssh://type"
          docker context use type
          docker compose pull
          docker compose up -d
          docker system prune -f
